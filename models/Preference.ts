/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v6.2.21
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2025-07-18T05:50:30+00:00 Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: v6.2.21
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PolymorphicProperty } from './PolymorphicProperty';
import {
    PolymorphicPropertyFromJSON,
    PolymorphicPropertyFromJSONTyped,
    PolymorphicPropertyToJSON,
    PolymorphicPropertyToJSONTyped,
} from './PolymorphicProperty';

/**
 * 
 * @export
 * @interface Preference
 */
export interface Preference {
    /**
     * 
     * @type {Date}
     * @memberof Preference
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Preference
     */
    readonly updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof Preference
     */
    name: string;
    /**
     * 
     * @type {PolymorphicProperty}
     * @memberof Preference
     */
    data: PolymorphicProperty;
}

/**
 * Check if a given object implements the Preference interface.
 */
export function instanceOfPreference(value: object): value is Preference {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function PreferenceFromJSON(json: any): Preference {
    return PreferenceFromJSONTyped(json, false);
}

export function PreferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Preference {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'name': json['name'],
        'data': PolymorphicPropertyFromJSON(json['data']),
    };
}

export function PreferenceToJSON(json: any): Preference {
    return PreferenceToJSONTyped(json, false);
}

export function PreferenceToJSONTyped(value?: Omit<Preference, 'created_at'|'updated_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'data': PolymorphicPropertyToJSON(value['data']),
    };
}

