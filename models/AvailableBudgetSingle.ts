/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v6.2.21
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2025-07-18T05:50:30+00:00 Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: v6.2.21
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AvailableBudgetRead } from './AvailableBudgetRead';
import {
    AvailableBudgetReadFromJSON,
    AvailableBudgetReadFromJSONTyped,
    AvailableBudgetReadToJSON,
    AvailableBudgetReadToJSONTyped,
} from './AvailableBudgetRead';

/**
 * 
 * @export
 * @interface AvailableBudgetSingle
 */
export interface AvailableBudgetSingle {
    /**
     * 
     * @type {AvailableBudgetRead}
     * @memberof AvailableBudgetSingle
     */
    data: AvailableBudgetRead;
}

/**
 * Check if a given object implements the AvailableBudgetSingle interface.
 */
export function instanceOfAvailableBudgetSingle(value: object): value is AvailableBudgetSingle {
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function AvailableBudgetSingleFromJSON(json: any): AvailableBudgetSingle {
    return AvailableBudgetSingleFromJSONTyped(json, false);
}

export function AvailableBudgetSingleFromJSONTyped(json: any, ignoreDiscriminator: boolean): AvailableBudgetSingle {
    if (json == null) {
        return json;
    }
    return {
        
        'data': AvailableBudgetReadFromJSON(json['data']),
    };
}

export function AvailableBudgetSingleToJSON(json: any): AvailableBudgetSingle {
    return AvailableBudgetSingleToJSONTyped(json, false);
}

export function AvailableBudgetSingleToJSONTyped(value?: AvailableBudgetSingle | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': AvailableBudgetReadToJSON(value['data']),
    };
}

