/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v6.2.21
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2025-07-18T05:50:30+00:00 Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: v6.2.21
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RuleGroup
 */
export interface RuleGroup {
    /**
     * 
     * @type {Date}
     * @memberof RuleGroup
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof RuleGroup
     */
    readonly updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof RuleGroup
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof RuleGroup
     */
    description?: string | null;
    /**
     * 
     * @type {number}
     * @memberof RuleGroup
     */
    readonly order?: number;
    /**
     * 
     * @type {boolean}
     * @memberof RuleGroup
     */
    active?: boolean;
}

/**
 * Check if a given object implements the RuleGroup interface.
 */
export function instanceOfRuleGroup(value: object): value is RuleGroup {
    if (!('title' in value) || value['title'] === undefined) return false;
    return true;
}

export function RuleGroupFromJSON(json: any): RuleGroup {
    return RuleGroupFromJSONTyped(json, false);
}

export function RuleGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleGroup {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'title': json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'order': json['order'] == null ? undefined : json['order'],
        'active': json['active'] == null ? undefined : json['active'],
    };
}

export function RuleGroupToJSON(json: any): RuleGroup {
    return RuleGroupToJSONTyped(json, false);
}

export function RuleGroupToJSONTyped(value?: Omit<RuleGroup, 'created_at'|'updated_at'|'order'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'description': value['description'],
        'active': value['active'],
    };
}

