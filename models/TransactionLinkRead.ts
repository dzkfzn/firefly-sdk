/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v6.2.21
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2025-07-18T05:50:30+00:00 Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: v6.2.21
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ObjectLink } from './ObjectLink';
import {
    ObjectLinkFromJSON,
    ObjectLinkFromJSONTyped,
    ObjectLinkToJSON,
    ObjectLinkToJSONTyped,
} from './ObjectLink';
import type { TransactionLink } from './TransactionLink';
import {
    TransactionLinkFromJSON,
    TransactionLinkFromJSONTyped,
    TransactionLinkToJSON,
    TransactionLinkToJSONTyped,
} from './TransactionLink';

/**
 * 
 * @export
 * @interface TransactionLinkRead
 */
export interface TransactionLinkRead {
    /**
     * Immutable value
     * @type {string}
     * @memberof TransactionLinkRead
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof TransactionLinkRead
     */
    id: string;
    /**
     * 
     * @type {TransactionLink}
     * @memberof TransactionLinkRead
     */
    attributes: TransactionLink;
    /**
     * 
     * @type {ObjectLink}
     * @memberof TransactionLinkRead
     */
    links: ObjectLink;
}

/**
 * Check if a given object implements the TransactionLinkRead interface.
 */
export function instanceOfTransactionLinkRead(value: object): value is TransactionLinkRead {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('attributes' in value) || value['attributes'] === undefined) return false;
    if (!('links' in value) || value['links'] === undefined) return false;
    return true;
}

export function TransactionLinkReadFromJSON(json: any): TransactionLinkRead {
    return TransactionLinkReadFromJSONTyped(json, false);
}

export function TransactionLinkReadFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionLinkRead {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'attributes': TransactionLinkFromJSON(json['attributes']),
        'links': ObjectLinkFromJSON(json['links']),
    };
}

export function TransactionLinkReadToJSON(json: any): TransactionLinkRead {
    return TransactionLinkReadToJSONTyped(json, false);
}

export function TransactionLinkReadToJSONTyped(value?: TransactionLinkRead | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'id': value['id'],
        'attributes': TransactionLinkToJSON(value['attributes']),
        'links': ObjectLinkToJSON(value['links']),
    };
}

