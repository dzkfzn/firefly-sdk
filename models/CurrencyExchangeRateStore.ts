/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v6.2.21
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2025-07-18T05:50:30+00:00 Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: v6.2.21
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CurrencyExchangeRateStore
 */
export interface CurrencyExchangeRateStore {
    /**
     * The date to which the exchange rate is applicable.
     * @type {Date}
     * @memberof CurrencyExchangeRateStore
     */
    date: Date;
    /**
     * The exchange rate from the base currency to the destination currency.
     * @type {string}
     * @memberof CurrencyExchangeRateStore
     */
    rate: string;
    /**
     * The base currency code.
     * @type {string}
     * @memberof CurrencyExchangeRateStore
     */
    from: string;
    /**
     * The destination currency code.
     * @type {string}
     * @memberof CurrencyExchangeRateStore
     */
    to: string;
}

/**
 * Check if a given object implements the CurrencyExchangeRateStore interface.
 */
export function instanceOfCurrencyExchangeRateStore(value: object): value is CurrencyExchangeRateStore {
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('rate' in value) || value['rate'] === undefined) return false;
    if (!('from' in value) || value['from'] === undefined) return false;
    if (!('to' in value) || value['to'] === undefined) return false;
    return true;
}

export function CurrencyExchangeRateStoreFromJSON(json: any): CurrencyExchangeRateStore {
    return CurrencyExchangeRateStoreFromJSONTyped(json, false);
}

export function CurrencyExchangeRateStoreFromJSONTyped(json: any, ignoreDiscriminator: boolean): CurrencyExchangeRateStore {
    if (json == null) {
        return json;
    }
    return {
        
        'date': (new Date(json['date'])),
        'rate': json['rate'],
        'from': json['from'],
        'to': json['to'],
    };
}

export function CurrencyExchangeRateStoreToJSON(json: any): CurrencyExchangeRateStore {
    return CurrencyExchangeRateStoreToJSONTyped(json, false);
}

export function CurrencyExchangeRateStoreToJSONTyped(value?: CurrencyExchangeRateStore | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'date': ((value['date']).toISOString().substring(0,10)),
        'rate': value['rate'],
        'from': value['from'],
        'to': value['to'],
    };
}

