/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v6.2.21
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2025-07-18T05:50:30+00:00 Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: v6.2.21
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TagModel } from './TagModel';
import {
    TagModelFromJSON,
    TagModelFromJSONTyped,
    TagModelToJSON,
    TagModelToJSONTyped,
} from './TagModel';
import type { ObjectLink } from './ObjectLink';
import {
    ObjectLinkFromJSON,
    ObjectLinkFromJSONTyped,
    ObjectLinkToJSON,
    ObjectLinkToJSONTyped,
} from './ObjectLink';

/**
 * 
 * @export
 * @interface TagRead
 */
export interface TagRead {
    /**
     * Immutable value
     * @type {string}
     * @memberof TagRead
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof TagRead
     */
    id: string;
    /**
     * 
     * @type {TagModel}
     * @memberof TagRead
     */
    attributes: TagModel;
    /**
     * 
     * @type {ObjectLink}
     * @memberof TagRead
     */
    links: ObjectLink;
}

/**
 * Check if a given object implements the TagRead interface.
 */
export function instanceOfTagRead(value: object): value is TagRead {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('attributes' in value) || value['attributes'] === undefined) return false;
    if (!('links' in value) || value['links'] === undefined) return false;
    return true;
}

export function TagReadFromJSON(json: any): TagRead {
    return TagReadFromJSONTyped(json, false);
}

export function TagReadFromJSONTyped(json: any, ignoreDiscriminator: boolean): TagRead {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'attributes': TagModelFromJSON(json['attributes']),
        'links': ObjectLinkFromJSON(json['links']),
    };
}

export function TagReadToJSON(json: any): TagRead {
    return TagReadToJSONTyped(json, false);
}

export function TagReadToJSONTyped(value?: TagRead | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'id': value['id'],
        'attributes': TagModelToJSON(value['attributes']),
        'links': ObjectLinkToJSON(value['links']),
    };
}

