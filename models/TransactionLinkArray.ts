/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v6.2.21
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2025-07-18T05:50:30+00:00 Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: v6.2.21
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Meta } from './Meta';
import {
    MetaFromJSON,
    MetaFromJSONTyped,
    MetaToJSON,
    MetaToJSONTyped,
} from './Meta';
import type { PageLink } from './PageLink';
import {
    PageLinkFromJSON,
    PageLinkFromJSONTyped,
    PageLinkToJSON,
    PageLinkToJSONTyped,
} from './PageLink';
import type { TransactionLinkRead } from './TransactionLinkRead';
import {
    TransactionLinkReadFromJSON,
    TransactionLinkReadFromJSONTyped,
    TransactionLinkReadToJSON,
    TransactionLinkReadToJSONTyped,
} from './TransactionLinkRead';

/**
 * 
 * @export
 * @interface TransactionLinkArray
 */
export interface TransactionLinkArray {
    /**
     * 
     * @type {Array<TransactionLinkRead>}
     * @memberof TransactionLinkArray
     */
    data: Array<TransactionLinkRead>;
    /**
     * 
     * @type {Meta}
     * @memberof TransactionLinkArray
     */
    meta: Meta;
    /**
     * 
     * @type {PageLink}
     * @memberof TransactionLinkArray
     */
    links: PageLink;
}

/**
 * Check if a given object implements the TransactionLinkArray interface.
 */
export function instanceOfTransactionLinkArray(value: object): value is TransactionLinkArray {
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('meta' in value) || value['meta'] === undefined) return false;
    if (!('links' in value) || value['links'] === undefined) return false;
    return true;
}

export function TransactionLinkArrayFromJSON(json: any): TransactionLinkArray {
    return TransactionLinkArrayFromJSONTyped(json, false);
}

export function TransactionLinkArrayFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionLinkArray {
    if (json == null) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(TransactionLinkReadFromJSON)),
        'meta': MetaFromJSON(json['meta']),
        'links': PageLinkFromJSON(json['links']),
    };
}

export function TransactionLinkArrayToJSON(json: any): TransactionLinkArray {
    return TransactionLinkArrayToJSONTyped(json, false);
}

export function TransactionLinkArrayToJSONTyped(value?: TransactionLinkArray | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': ((value['data'] as Array<any>).map(TransactionLinkReadToJSON)),
        'meta': MetaToJSON(value['meta']),
        'links': PageLinkToJSON(value['links']),
    };
}

