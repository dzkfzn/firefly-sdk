/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v6.2.21
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2025-07-18T05:50:30+00:00 Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: v6.2.21
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BudgetSpent } from './BudgetSpent';
import {
    BudgetSpentFromJSON,
    BudgetSpentFromJSONTyped,
    BudgetSpentToJSON,
    BudgetSpentToJSONTyped,
} from './BudgetSpent';
import type { AutoBudgetType } from './AutoBudgetType';
import {
    AutoBudgetTypeFromJSON,
    AutoBudgetTypeFromJSONTyped,
    AutoBudgetTypeToJSON,
    AutoBudgetTypeToJSONTyped,
} from './AutoBudgetType';
import type { AutoBudgetPeriod } from './AutoBudgetPeriod';
import {
    AutoBudgetPeriodFromJSON,
    AutoBudgetPeriodFromJSONTyped,
    AutoBudgetPeriodToJSON,
    AutoBudgetPeriodToJSONTyped,
} from './AutoBudgetPeriod';

/**
 * 
 * @export
 * @interface Budget
 */
export interface Budget {
    /**
     * 
     * @type {Date}
     * @memberof Budget
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Budget
     */
    readonly updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof Budget
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof Budget
     */
    active?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Budget
     */
    notes?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Budget
     */
    readonly order?: number;
    /**
     * 
     * @type {AutoBudgetType}
     * @memberof Budget
     */
    autoBudgetType?: AutoBudgetType | null;
    /**
     * The currency ID that is part of the budget's auto-budget settings, if any.
     * @type {string}
     * @memberof Budget
     */
    currencyId?: string | null;
    /**
     * The currency code that is part of the budget's auto-budget settings, if any.
     * @type {string}
     * @memberof Budget
     */
    currencyCode?: string | null;
    /**
     * The currency symbol that is part of the budget's auto-budget settings, if any.
     * @type {string}
     * @memberof Budget
     */
    readonly currencySymbol?: string | null;
    /**
     * The currency decimal places that is part of the budget's auto-budget settings, if any.
     * @type {number}
     * @memberof Budget
     */
    readonly currencyDecimalPlaces?: number | null;
    /**
     * The administration's native currency ID.
     * @type {string}
     * @memberof Budget
     */
    readonly nativeCurrencyId?: string;
    /**
     * The administration's native currency code.
     * @type {string}
     * @memberof Budget
     */
    readonly nativeCurrencyCode?: string;
    /**
     * The administration's native currency symbol.
     * @type {string}
     * @memberof Budget
     */
    readonly nativeCurrencySymbol?: string;
    /**
     * The administration's native currency decimal places.
     * @type {number}
     * @memberof Budget
     */
    readonly nativeCurrencyDecimalPlaces?: number;
    /**
     * The amount for the auto-budget, if set.
     * @type {string}
     * @memberof Budget
     */
    autoBudgetAmount?: string | null;
    /**
     * The native amount for the auto-budget, if set.
     * @type {string}
     * @memberof Budget
     */
    nativeAutoBudgetAmount?: string | null;
    /**
     * 
     * @type {AutoBudgetPeriod}
     * @memberof Budget
     */
    autoBudgetPeriod?: AutoBudgetPeriod | null;
    /**
     * Information on how much was spent in this budget. Is only filled in when the start and end date are submitted.
     * @type {Array<BudgetSpent>}
     * @memberof Budget
     */
    readonly spent?: Array<BudgetSpent>;
}



/**
 * Check if a given object implements the Budget interface.
 */
export function instanceOfBudget(value: object): value is Budget {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function BudgetFromJSON(json: any): Budget {
    return BudgetFromJSONTyped(json, false);
}

export function BudgetFromJSONTyped(json: any, ignoreDiscriminator: boolean): Budget {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'name': json['name'],
        'active': json['active'] == null ? undefined : json['active'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'order': json['order'] == null ? undefined : json['order'],
        'autoBudgetType': json['auto_budget_type'] == null ? undefined : AutoBudgetTypeFromJSON(json['auto_budget_type']),
        'currencyId': json['currency_id'] == null ? undefined : json['currency_id'],
        'currencyCode': json['currency_code'] == null ? undefined : json['currency_code'],
        'currencySymbol': json['currency_symbol'] == null ? undefined : json['currency_symbol'],
        'currencyDecimalPlaces': json['currency_decimal_places'] == null ? undefined : json['currency_decimal_places'],
        'nativeCurrencyId': json['native_currency_id'] == null ? undefined : json['native_currency_id'],
        'nativeCurrencyCode': json['native_currency_code'] == null ? undefined : json['native_currency_code'],
        'nativeCurrencySymbol': json['native_currency_symbol'] == null ? undefined : json['native_currency_symbol'],
        'nativeCurrencyDecimalPlaces': json['native_currency_decimal_places'] == null ? undefined : json['native_currency_decimal_places'],
        'autoBudgetAmount': json['auto_budget_amount'] == null ? undefined : json['auto_budget_amount'],
        'nativeAutoBudgetAmount': json['native_auto_budget_amount'] == null ? undefined : json['native_auto_budget_amount'],
        'autoBudgetPeriod': json['auto_budget_period'] == null ? undefined : AutoBudgetPeriodFromJSON(json['auto_budget_period']),
        'spent': json['spent'] == null ? undefined : ((json['spent'] as Array<any>).map(BudgetSpentFromJSON)),
    };
}

export function BudgetToJSON(json: any): Budget {
    return BudgetToJSONTyped(json, false);
}

export function BudgetToJSONTyped(value?: Omit<Budget, 'created_at'|'updated_at'|'order'|'currency_symbol'|'currency_decimal_places'|'native_currency_id'|'native_currency_code'|'native_currency_symbol'|'native_currency_decimal_places'|'spent'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'active': value['active'],
        'notes': value['notes'],
        'auto_budget_type': AutoBudgetTypeToJSON(value['autoBudgetType']),
        'currency_id': value['currencyId'],
        'currency_code': value['currencyCode'],
        'auto_budget_amount': value['autoBudgetAmount'],
        'native_auto_budget_amount': value['nativeAutoBudgetAmount'],
        'auto_budget_period': AutoBudgetPeriodToJSON(value['autoBudgetPeriod']),
    };
}

