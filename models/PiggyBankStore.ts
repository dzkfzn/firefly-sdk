/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v6.2.21
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2025-07-18T05:50:30+00:00 Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: v6.2.21
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PiggyBankAccountStore } from './PiggyBankAccountStore';
import {
    PiggyBankAccountStoreFromJSON,
    PiggyBankAccountStoreFromJSONTyped,
    PiggyBankAccountStoreToJSON,
    PiggyBankAccountStoreToJSONTyped,
} from './PiggyBankAccountStore';

/**
 * 
 * @export
 * @interface PiggyBankStore
 */
export interface PiggyBankStore {
    /**
     * 
     * @type {string}
     * @memberof PiggyBankStore
     */
    name: string;
    /**
     * 
     * @type {Array<PiggyBankAccountStore>}
     * @memberof PiggyBankStore
     */
    accounts?: Array<PiggyBankAccountStore>;
    /**
     * 
     * @type {string}
     * @memberof PiggyBankStore
     */
    targetAmount: string | null;
    /**
     * 
     * @type {string}
     * @memberof PiggyBankStore
     */
    currentAmount?: string;
    /**
     * The date you started with this piggy bank.
     * @type {Date}
     * @memberof PiggyBankStore
     */
    startDate?: Date;
    /**
     * The date you intend to finish saving money.
     * @type {Date}
     * @memberof PiggyBankStore
     */
    targetDate?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof PiggyBankStore
     */
    order?: number;
    /**
     * 
     * @type {boolean}
     * @memberof PiggyBankStore
     */
    readonly active?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PiggyBankStore
     */
    notes?: string | null;
    /**
     * The group ID of the group this object is part of. NULL if no group.
     * @type {string}
     * @memberof PiggyBankStore
     */
    objectGroupId?: string | null;
    /**
     * The name of the group. NULL if no group.
     * @type {string}
     * @memberof PiggyBankStore
     */
    objectGroupTitle?: string | null;
}

/**
 * Check if a given object implements the PiggyBankStore interface.
 */
export function instanceOfPiggyBankStore(value: object): value is PiggyBankStore {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('targetAmount' in value) || value['targetAmount'] === undefined) return false;
    return true;
}

export function PiggyBankStoreFromJSON(json: any): PiggyBankStore {
    return PiggyBankStoreFromJSONTyped(json, false);
}

export function PiggyBankStoreFromJSONTyped(json: any, ignoreDiscriminator: boolean): PiggyBankStore {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'accounts': json['accounts'] == null ? undefined : ((json['accounts'] as Array<any>).map(PiggyBankAccountStoreFromJSON)),
        'targetAmount': json['target_amount'],
        'currentAmount': json['current_amount'] == null ? undefined : json['current_amount'],
        'startDate': json['start_date'] == null ? undefined : (new Date(json['start_date'])),
        'targetDate': json['target_date'] == null ? undefined : (new Date(json['target_date'])),
        'order': json['order'] == null ? undefined : json['order'],
        'active': json['active'] == null ? undefined : json['active'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'objectGroupId': json['object_group_id'] == null ? undefined : json['object_group_id'],
        'objectGroupTitle': json['object_group_title'] == null ? undefined : json['object_group_title'],
    };
}

export function PiggyBankStoreToJSON(json: any): PiggyBankStore {
    return PiggyBankStoreToJSONTyped(json, false);
}

export function PiggyBankStoreToJSONTyped(value?: Omit<PiggyBankStore, 'active'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'accounts': value['accounts'] == null ? undefined : ((value['accounts'] as Array<any>).map(PiggyBankAccountStoreToJSON)),
        'target_amount': value['targetAmount'],
        'current_amount': value['currentAmount'],
        'start_date': value['startDate'] == null ? undefined : ((value['startDate']).toISOString().substring(0,10)),
        'target_date': value['targetDate'] === null ? null : ((value['targetDate'] as any)?.toISOString().substring(0,10)),
        'order': value['order'],
        'notes': value['notes'],
        'object_group_id': value['objectGroupId'],
        'object_group_title': value['objectGroupTitle'],
    };
}

