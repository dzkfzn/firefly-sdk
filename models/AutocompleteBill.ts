/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v6.2.21
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2025-07-18T05:50:30+00:00 Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: v6.2.21
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AutocompleteBill
 */
export interface AutocompleteBill {
    /**
     * 
     * @type {string}
     * @memberof AutocompleteBill
     */
    id: string;
    /**
     * Name of the bill found by an auto-complete search.
     * @type {string}
     * @memberof AutocompleteBill
     */
    name: string;
    /**
     * Is the bill active or not?
     * @type {boolean}
     * @memberof AutocompleteBill
     */
    active?: boolean;
}

/**
 * Check if a given object implements the AutocompleteBill interface.
 */
export function instanceOfAutocompleteBill(value: object): value is AutocompleteBill {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function AutocompleteBillFromJSON(json: any): AutocompleteBill {
    return AutocompleteBillFromJSONTyped(json, false);
}

export function AutocompleteBillFromJSONTyped(json: any, ignoreDiscriminator: boolean): AutocompleteBill {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'active': json['active'] == null ? undefined : json['active'],
    };
}

export function AutocompleteBillToJSON(json: any): AutocompleteBill {
    return AutocompleteBillToJSONTyped(json, false);
}

export function AutocompleteBillToJSONTyped(value?: AutocompleteBill | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'active': value['active'],
    };
}

