/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v6.2.21
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2025-07-18T05:50:30+00:00 Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: v6.2.21
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PiggyBankAccountUpdate } from './PiggyBankAccountUpdate';
import {
    PiggyBankAccountUpdateFromJSON,
    PiggyBankAccountUpdateFromJSONTyped,
    PiggyBankAccountUpdateToJSON,
    PiggyBankAccountUpdateToJSONTyped,
} from './PiggyBankAccountUpdate';

/**
 * 
 * @export
 * @interface PiggyBankUpdate
 */
export interface PiggyBankUpdate {
    /**
     * 
     * @type {string}
     * @memberof PiggyBankUpdate
     */
    name?: string;
    /**
     * 
     * @type {Array<PiggyBankAccountUpdate>}
     * @memberof PiggyBankUpdate
     */
    accounts?: Array<PiggyBankAccountUpdate>;
    /**
     * 
     * @type {string}
     * @memberof PiggyBankUpdate
     */
    readonly currencyId?: string;
    /**
     * 
     * @type {string}
     * @memberof PiggyBankUpdate
     */
    readonly currencyCode?: string;
    /**
     * 
     * @type {string}
     * @memberof PiggyBankUpdate
     */
    targetAmount?: string | null;
    /**
     * The date you started with this piggy bank.
     * @type {Date}
     * @memberof PiggyBankUpdate
     */
    startDate?: Date;
    /**
     * The date you intend to finish saving money.
     * @type {Date}
     * @memberof PiggyBankUpdate
     */
    targetDate?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof PiggyBankUpdate
     */
    order?: number;
    /**
     * 
     * @type {boolean}
     * @memberof PiggyBankUpdate
     */
    readonly active?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PiggyBankUpdate
     */
    notes?: string | null;
    /**
     * The group ID of the group this object is part of. NULL if no group.
     * @type {string}
     * @memberof PiggyBankUpdate
     */
    objectGroupId?: string | null;
    /**
     * The name of the group. NULL if no group.
     * @type {string}
     * @memberof PiggyBankUpdate
     */
    objectGroupTitle?: string | null;
}

/**
 * Check if a given object implements the PiggyBankUpdate interface.
 */
export function instanceOfPiggyBankUpdate(value: object): value is PiggyBankUpdate {
    return true;
}

export function PiggyBankUpdateFromJSON(json: any): PiggyBankUpdate {
    return PiggyBankUpdateFromJSONTyped(json, false);
}

export function PiggyBankUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): PiggyBankUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'accounts': json['accounts'] == null ? undefined : ((json['accounts'] as Array<any>).map(PiggyBankAccountUpdateFromJSON)),
        'currencyId': json['currency_id'] == null ? undefined : json['currency_id'],
        'currencyCode': json['currency_code'] == null ? undefined : json['currency_code'],
        'targetAmount': json['target_amount'] == null ? undefined : json['target_amount'],
        'startDate': json['start_date'] == null ? undefined : (new Date(json['start_date'])),
        'targetDate': json['target_date'] == null ? undefined : (new Date(json['target_date'])),
        'order': json['order'] == null ? undefined : json['order'],
        'active': json['active'] == null ? undefined : json['active'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'objectGroupId': json['object_group_id'] == null ? undefined : json['object_group_id'],
        'objectGroupTitle': json['object_group_title'] == null ? undefined : json['object_group_title'],
    };
}

export function PiggyBankUpdateToJSON(json: any): PiggyBankUpdate {
    return PiggyBankUpdateToJSONTyped(json, false);
}

export function PiggyBankUpdateToJSONTyped(value?: Omit<PiggyBankUpdate, 'currency_id'|'currency_code'|'active'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'accounts': value['accounts'] == null ? undefined : ((value['accounts'] as Array<any>).map(PiggyBankAccountUpdateToJSON)),
        'target_amount': value['targetAmount'],
        'start_date': value['startDate'] == null ? undefined : ((value['startDate']).toISOString().substring(0,10)),
        'target_date': value['targetDate'] === null ? null : ((value['targetDate'] as any)?.toISOString().substring(0,10)),
        'order': value['order'],
        'notes': value['notes'],
        'object_group_id': value['objectGroupId'],
        'object_group_title': value['objectGroupTitle'],
    };
}

