/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v6.2.21
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2025-07-18T05:50:30+00:00 Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: v6.2.21
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WebhookTrigger } from './WebhookTrigger';
import {
    WebhookTriggerFromJSON,
    WebhookTriggerFromJSONTyped,
    WebhookTriggerToJSON,
    WebhookTriggerToJSONTyped,
} from './WebhookTrigger';
import type { WebhookResponse } from './WebhookResponse';
import {
    WebhookResponseFromJSON,
    WebhookResponseFromJSONTyped,
    WebhookResponseToJSON,
    WebhookResponseToJSONTyped,
} from './WebhookResponse';
import type { WebhookDelivery } from './WebhookDelivery';
import {
    WebhookDeliveryFromJSON,
    WebhookDeliveryFromJSONTyped,
    WebhookDeliveryToJSON,
    WebhookDeliveryToJSONTyped,
} from './WebhookDelivery';

/**
 * 
 * @export
 * @interface WebhookStore
 */
export interface WebhookStore {
    /**
     * Boolean to indicate if the webhook is active
     * @type {boolean}
     * @memberof WebhookStore
     */
    active?: boolean;
    /**
     * A title for the webhook for easy recognition.
     * @type {string}
     * @memberof WebhookStore
     */
    title: string;
    /**
     * 
     * @type {WebhookTrigger}
     * @memberof WebhookStore
     */
    trigger: WebhookTrigger;
    /**
     * 
     * @type {WebhookResponse}
     * @memberof WebhookStore
     */
    response: WebhookResponse;
    /**
     * 
     * @type {WebhookDelivery}
     * @memberof WebhookStore
     */
    delivery: WebhookDelivery;
    /**
     * The URL of the webhook. Has to start with `https`.
     * @type {string}
     * @memberof WebhookStore
     */
    url: string;
}



/**
 * Check if a given object implements the WebhookStore interface.
 */
export function instanceOfWebhookStore(value: object): value is WebhookStore {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('trigger' in value) || value['trigger'] === undefined) return false;
    if (!('response' in value) || value['response'] === undefined) return false;
    if (!('delivery' in value) || value['delivery'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function WebhookStoreFromJSON(json: any): WebhookStore {
    return WebhookStoreFromJSONTyped(json, false);
}

export function WebhookStoreFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookStore {
    if (json == null) {
        return json;
    }
    return {
        
        'active': json['active'] == null ? undefined : json['active'],
        'title': json['title'],
        'trigger': WebhookTriggerFromJSON(json['trigger']),
        'response': WebhookResponseFromJSON(json['response']),
        'delivery': WebhookDeliveryFromJSON(json['delivery']),
        'url': json['url'],
    };
}

export function WebhookStoreToJSON(json: any): WebhookStore {
    return WebhookStoreToJSONTyped(json, false);
}

export function WebhookStoreToJSONTyped(value?: WebhookStore | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active': value['active'],
        'title': value['title'],
        'trigger': WebhookTriggerToJSON(value['trigger']),
        'response': WebhookResponseToJSON(value['response']),
        'delivery': WebhookDeliveryToJSON(value['delivery']),
        'url': value['url'],
    };
}

