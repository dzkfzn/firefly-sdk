/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v6.2.21
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2025-07-18T05:50:30+00:00 Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: v6.2.21
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WebhookMessage
 */
export interface WebhookMessage {
    /**
     * 
     * @type {Date}
     * @memberof WebhookMessage
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof WebhookMessage
     */
    readonly updatedAt?: Date;
    /**
     * If this message is sent yet.
     * @type {boolean}
     * @memberof WebhookMessage
     */
    sent?: boolean;
    /**
     * If this message has errored out.
     * @type {boolean}
     * @memberof WebhookMessage
     */
    errored?: boolean;
    /**
     * The ID of the webhook this message belongs to.
     * @type {string}
     * @memberof WebhookMessage
     */
    webhookId?: string;
    /**
     * Long UUID string for identification of this webhook message.
     * @type {string}
     * @memberof WebhookMessage
     */
    uuid?: string;
    /**
     * The actual message that is sent or will be sent as JSON string.
     * @type {string}
     * @memberof WebhookMessage
     */
    message?: string | null;
}

/**
 * Check if a given object implements the WebhookMessage interface.
 */
export function instanceOfWebhookMessage(value: object): value is WebhookMessage {
    return true;
}

export function WebhookMessageFromJSON(json: any): WebhookMessage {
    return WebhookMessageFromJSONTyped(json, false);
}

export function WebhookMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'sent': json['sent'] == null ? undefined : json['sent'],
        'errored': json['errored'] == null ? undefined : json['errored'],
        'webhookId': json['webhook_id'] == null ? undefined : json['webhook_id'],
        'uuid': json['uuid'] == null ? undefined : json['uuid'],
        'message': json['message'] == null ? undefined : json['message'],
    };
}

export function WebhookMessageToJSON(json: any): WebhookMessage {
    return WebhookMessageToJSONTyped(json, false);
}

export function WebhookMessageToJSONTyped(value?: Omit<WebhookMessage, 'created_at'|'updated_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'sent': value['sent'],
        'errored': value['errored'],
        'webhook_id': value['webhookId'],
        'uuid': value['uuid'],
        'message': value['message'],
    };
}

