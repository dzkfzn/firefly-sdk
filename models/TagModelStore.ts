/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v6.2.21
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2025-07-18T05:50:30+00:00 Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: v6.2.21
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TagModelStore
 */
export interface TagModelStore {
    /**
     * The tag
     * @type {string}
     * @memberof TagModelStore
     */
    tag: string;
    /**
     * The date to which the tag is applicable.
     * @type {Date}
     * @memberof TagModelStore
     */
    date?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof TagModelStore
     */
    description?: string | null;
    /**
     * Latitude of the tag's location, if applicable. Can be used to draw a map.
     * @type {number}
     * @memberof TagModelStore
     */
    latitude?: number | null;
    /**
     * Latitude of the tag's location, if applicable. Can be used to draw a map.
     * @type {number}
     * @memberof TagModelStore
     */
    longitude?: number | null;
    /**
     * Zoom level for the map, if drawn. This to set the box right. Unfortunately this is a proprietary value because each map provider has different zoom levels.
     * @type {number}
     * @memberof TagModelStore
     */
    zoomLevel?: number | null;
}

/**
 * Check if a given object implements the TagModelStore interface.
 */
export function instanceOfTagModelStore(value: object): value is TagModelStore {
    if (!('tag' in value) || value['tag'] === undefined) return false;
    return true;
}

export function TagModelStoreFromJSON(json: any): TagModelStore {
    return TagModelStoreFromJSONTyped(json, false);
}

export function TagModelStoreFromJSONTyped(json: any, ignoreDiscriminator: boolean): TagModelStore {
    if (json == null) {
        return json;
    }
    return {
        
        'tag': json['tag'],
        'date': json['date'] == null ? undefined : (new Date(json['date'])),
        'description': json['description'] == null ? undefined : json['description'],
        'latitude': json['latitude'] == null ? undefined : json['latitude'],
        'longitude': json['longitude'] == null ? undefined : json['longitude'],
        'zoomLevel': json['zoom_level'] == null ? undefined : json['zoom_level'],
    };
}

export function TagModelStoreToJSON(json: any): TagModelStore {
    return TagModelStoreToJSONTyped(json, false);
}

export function TagModelStoreToJSONTyped(value?: TagModelStore | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tag': value['tag'],
        'date': value['date'] === null ? null : ((value['date'] as any)?.toISOString().substring(0,10)),
        'description': value['description'],
        'latitude': value['latitude'],
        'longitude': value['longitude'],
        'zoom_level': value['zoomLevel'],
    };
}

