/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v6.2.21
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2025-07-18T05:50:30+00:00 Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: v6.2.21
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WebhookTrigger } from './WebhookTrigger';
import {
    WebhookTriggerFromJSON,
    WebhookTriggerFromJSONTyped,
    WebhookTriggerToJSON,
    WebhookTriggerToJSONTyped,
} from './WebhookTrigger';
import type { WebhookResponse } from './WebhookResponse';
import {
    WebhookResponseFromJSON,
    WebhookResponseFromJSONTyped,
    WebhookResponseToJSON,
    WebhookResponseToJSONTyped,
} from './WebhookResponse';
import type { WebhookDelivery } from './WebhookDelivery';
import {
    WebhookDeliveryFromJSON,
    WebhookDeliveryFromJSONTyped,
    WebhookDeliveryToJSON,
    WebhookDeliveryToJSONTyped,
} from './WebhookDelivery';

/**
 * 
 * @export
 * @interface WebhookUpdate
 */
export interface WebhookUpdate {
    /**
     * Boolean to indicate if the webhook is active
     * @type {boolean}
     * @memberof WebhookUpdate
     */
    active?: boolean;
    /**
     * A title for the webhook for easy recognition.
     * @type {string}
     * @memberof WebhookUpdate
     */
    title?: string;
    /**
     * A 24-character secret for the webhook. It's generated by Firefly III when saving a new webhook. If you submit a new secret through the PUT endpoint it will generate a new secret for the selected webhook, a new secret bearing no relation to whatever you just submitted.
     * @type {string}
     * @memberof WebhookUpdate
     */
    secret?: string;
    /**
     * 
     * @type {WebhookTrigger}
     * @memberof WebhookUpdate
     */
    trigger?: WebhookTrigger;
    /**
     * 
     * @type {WebhookResponse}
     * @memberof WebhookUpdate
     */
    response?: WebhookResponse;
    /**
     * 
     * @type {WebhookDelivery}
     * @memberof WebhookUpdate
     */
    delivery?: WebhookDelivery;
    /**
     * The URL of the webhook. Has to start with `https`.
     * @type {string}
     * @memberof WebhookUpdate
     */
    url?: string;
}



/**
 * Check if a given object implements the WebhookUpdate interface.
 */
export function instanceOfWebhookUpdate(value: object): value is WebhookUpdate {
    return true;
}

export function WebhookUpdateFromJSON(json: any): WebhookUpdate {
    return WebhookUpdateFromJSONTyped(json, false);
}

export function WebhookUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'active': json['active'] == null ? undefined : json['active'],
        'title': json['title'] == null ? undefined : json['title'],
        'secret': json['secret'] == null ? undefined : json['secret'],
        'trigger': json['trigger'] == null ? undefined : WebhookTriggerFromJSON(json['trigger']),
        'response': json['response'] == null ? undefined : WebhookResponseFromJSON(json['response']),
        'delivery': json['delivery'] == null ? undefined : WebhookDeliveryFromJSON(json['delivery']),
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function WebhookUpdateToJSON(json: any): WebhookUpdate {
    return WebhookUpdateToJSONTyped(json, false);
}

export function WebhookUpdateToJSONTyped(value?: WebhookUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active': value['active'],
        'title': value['title'],
        'secret': value['secret'],
        'trigger': WebhookTriggerToJSON(value['trigger']),
        'response': WebhookResponseToJSON(value['response']),
        'delivery': WebhookDeliveryToJSON(value['delivery']),
        'url': value['url'],
    };
}

