/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v6.2.21
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2025-07-18T05:50:30+00:00 Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: v6.2.21
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserGroupReadMembers } from './UserGroupReadMembers';
import {
    UserGroupReadMembersFromJSON,
    UserGroupReadMembersFromJSONTyped,
    UserGroupReadMembersToJSON,
    UserGroupReadMembersToJSONTyped,
} from './UserGroupReadMembers';

/**
 * 
 * @export
 * @interface UserGroupReadAttributes
 */
export interface UserGroupReadAttributes {
    /**
     * 
     * @type {Date}
     * @memberof UserGroupReadAttributes
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof UserGroupReadAttributes
     */
    readonly updatedAt?: Date;
    /**
     * Is this user group ('financial administration') currently the active administration?
     * @type {boolean}
     * @memberof UserGroupReadAttributes
     */
    readonly inUse?: boolean;
    /**
     * Can the current user see the members of this user group?
     * @type {boolean}
     * @memberof UserGroupReadAttributes
     */
    readonly canSeeMembers?: boolean;
    /**
     * Title of the user group. By default, it is the same as the user's email address.
     * @type {string}
     * @memberof UserGroupReadAttributes
     */
    title?: string;
    /**
     * Returns the native currency ID of the user group.
     * @type {string}
     * @memberof UserGroupReadAttributes
     */
    readonly nativeCurrencyId?: string;
    /**
     * Returns the native currency code of the user group.
     * @type {string}
     * @memberof UserGroupReadAttributes
     */
    nativeCurrencyCode?: string;
    /**
     * Returns the native currency symbol of the user group.
     * @type {string}
     * @memberof UserGroupReadAttributes
     */
    readonly nativeCurrencySymbol?: string;
    /**
     * Returns the native currency decimal places of the user group.
     * @type {number}
     * @memberof UserGroupReadAttributes
     */
    readonly nativeCurrencyDecimalPlaces?: number;
    /**
     * 
     * @type {Array<UserGroupReadMembers>}
     * @memberof UserGroupReadAttributes
     */
    members?: Array<UserGroupReadMembers>;
}

/**
 * Check if a given object implements the UserGroupReadAttributes interface.
 */
export function instanceOfUserGroupReadAttributes(value: object): value is UserGroupReadAttributes {
    return true;
}

export function UserGroupReadAttributesFromJSON(json: any): UserGroupReadAttributes {
    return UserGroupReadAttributesFromJSONTyped(json, false);
}

export function UserGroupReadAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserGroupReadAttributes {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'inUse': json['in_use'] == null ? undefined : json['in_use'],
        'canSeeMembers': json['can_see_members'] == null ? undefined : json['can_see_members'],
        'title': json['title'] == null ? undefined : json['title'],
        'nativeCurrencyId': json['native_currency_id'] == null ? undefined : json['native_currency_id'],
        'nativeCurrencyCode': json['native_currency_code'] == null ? undefined : json['native_currency_code'],
        'nativeCurrencySymbol': json['native_currency_symbol'] == null ? undefined : json['native_currency_symbol'],
        'nativeCurrencyDecimalPlaces': json['native_currency_decimal_places'] == null ? undefined : json['native_currency_decimal_places'],
        'members': json['members'] == null ? undefined : ((json['members'] as Array<any>).map(UserGroupReadMembersFromJSON)),
    };
}

export function UserGroupReadAttributesToJSON(json: any): UserGroupReadAttributes {
    return UserGroupReadAttributesToJSONTyped(json, false);
}

export function UserGroupReadAttributesToJSONTyped(value?: Omit<UserGroupReadAttributes, 'created_at'|'updated_at'|'in_use'|'can_see_members'|'native_currency_id'|'native_currency_symbol'|'native_currency_decimal_places'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'native_currency_code': value['nativeCurrencyCode'],
        'members': value['members'] == null ? undefined : ((value['members'] as Array<any>).map(UserGroupReadMembersToJSON)),
    };
}

